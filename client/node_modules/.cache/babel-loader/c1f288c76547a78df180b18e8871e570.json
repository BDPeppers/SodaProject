{"ast":null,"code":"var _jsxFileName = \"C:\\\\webdev\\\\sodaProject\\\\soda-app\\\\src\\\\components\\\\pages\\\\Products\\\\ProductDetails\\\\ProductDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react'; // import * as api from '../../../api/api'\n\nimport { saveAs } from 'file-saver';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\nimport { display } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductDetails(props) {\n  _s();\n\n  const [open, setOpen] = React.useState(false); //   const [succesfulPurchase, setSuccessfulPurcahse] = React.useState();\n\n  const [sodas, setSoda] = React.useState([]); //sodaList\n\n  const [price, setPrice] = React.useState(0); //soda quantity\n\n  const [editPriceDisplay, setPriceDisplay] = React.useState('none');\n  const [editRestockDisplay, setRestockDisplay] = React.useState('none'); //calling Server to set soda state\n  // useEffect(async () => {\n  //   const response = api.fetchSodas().then((res) => setInitialSodaStates(res.data));\n  // }, [succesfulPurchase]);\n  //calling server to update sodas\n  // useEffect(async () => {\n  //   const response = api.updateSoda(selectedSoda._id, selectedSoda.quantity)\n  // },\n  // [succesfulPurchase])//after a successful purchase is made\n  //update soda price\n\n  const handleQtyInput = event => {\n    setPrice(Number(event.target.value) || '');\n  };\n\n  const handleRestock = () => {//restock api\n  };\n\n  const priceDisplay = style => {\n    style == 'none' ? setPriceDisplay('flex') : setPriceDisplay('none');\n  };\n\n  const restockDisplay = style => {\n    style == 'none' ? setRestockDisplay('flex') : setRestockDisplay('none');\n  }; //opens control panel\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  }; //closes control panel\n\n\n  const handleClose = (event, reason) => {\n    if (reason !== 'backdropClick') {\n      setOpen(false);\n      setPriceDisplay('none');\n      setRestockDisplay('none');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"product-details\",\n      variant: \"outlined\",\n      onClick: handleClickOpen,\n      children: \"Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      disableEscapeKeyDown: true,\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: props.sodaName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"restock-box\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => restockDisplay(editRestockDisplay),\n            children: \"Restock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"checkmark-wrapper\",\n            style: {\n              display: editRestockDisplay\n            },\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              class: \"checkmark\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              viewBox: \"0 0 52 52\",\n              children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                class: \"checkmark__circle\",\n                cx: \"26\",\n                cy: \"26\",\n                r: \"25\",\n                fill: \"none\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                class: \"checkmark__check\",\n                fill: \"none\",\n                d: \"M14.1 27.2l7.1 7.2 16.7-16.8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"price-box\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => priceDisplay(editPriceDisplay),\n            children: \"Edit Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            sx: {\n              display: editPriceDisplay,\n              flexWrap: 'wrap'\n            },\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              sx: {\n                m: 1,\n                minWidth: 120\n              },\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                inputProps: {\n                  inputMode: 'numeric',\n                  pattern: '[0-9]*'\n                },\n                id: \"outlined-basic\",\n                label: \"New Price\",\n                variant: \"outlined\",\n                value: price,\n                onChange: event => handleQtyInput(event)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            handleClose();\n          },\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductDetails, \"WWtgtFBaj6I4naz80aZ7YT7JEw0=\");\n\n_c = ProductDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductDetails\");","map":{"version":3,"sources":["C:/webdev/sodaProject/soda-app/src/components/pages/Products/ProductDetails/ProductDetails.jsx"],"names":["React","useEffect","saveAs","Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","FormControl","Select","TextField","display","ProductDetails","props","open","setOpen","useState","sodas","setSoda","price","setPrice","editPriceDisplay","setPriceDisplay","editRestockDisplay","setRestockDisplay","handleQtyInput","event","Number","target","value","handleRestock","priceDisplay","style","restockDisplay","handleClickOpen","handleClose","reason","sodaName","flexWrap","m","minWidth","inputMode","pattern"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AAEA,SAASC,MAAT,QAAuB,YAAvB;AAEA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAE9C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,KAAK,CAACiB,QAAN,CAAe,KAAf,CAAxB,CAF8C,CAG9C;;AACA,QAAM,CAACC,KAAD,EAAQC,OAAR,IAAmBnB,KAAK,CAACiB,QAAN,CAAe,EAAf,CAAzB,CAJ8C,CAIF;;AAC5C,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBrB,KAAK,CAACiB,QAAN,CAAe,CAAf,CAA1B,CAL8C,CAKF;;AAC5C,QAAM,CAACK,gBAAD,EAAmBC,eAAnB,IAAsCvB,KAAK,CAACiB,QAAN,CAAe,MAAf,CAA5C;AACA,QAAM,CAACO,kBAAD,EAAqBC,iBAArB,IAA0CzB,KAAK,CAACiB,QAAN,CAAe,MAAf,CAAhD,CAP8C,CAS9C;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;;AACA,QAAMS,cAAc,GAAIC,KAAD,IAAW;AAChCN,IAAAA,QAAQ,CAACO,MAAM,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAN,IAA8B,EAA/B,CAAR;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAG,MAAM,CACxB;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,IAAI,MAAV,GAAoBV,eAAe,CAAC,MAAD,CAAnC,GAA+CA,eAAe,CAAC,MAAD,CAA9D;AACF,GAFD;;AAIA,QAAMW,cAAc,GAAID,KAAD,IAAW;AAC7BA,IAAAA,KAAK,IAAI,MAAV,GAAoBR,iBAAiB,CAAC,MAAD,CAArC,GAAiDA,iBAAiB,CAAC,MAAD,CAAlE;AACF,GAFF,CAlC8C,CAsC9C;;;AACA,QAAMU,eAAe,GAAG,MAAM;AAC5BnB,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD,CAvC8C,CA2C9C;;;AACA,QAAMoB,WAAW,GAAG,CAACT,KAAD,EAAQU,MAAR,KAAmB;AACrC,QAAIA,MAAM,KAAK,eAAf,EAAgC;AAC9BrB,MAAAA,OAAO,CAAC,KAAD,CAAP;AACAO,MAAAA,eAAe,CAAC,MAAD,CAAf;AACAE,MAAAA,iBAAiB,CAAC,MAAD,CAAjB;AACD;AACF,GAND;;AASE,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAC,UAA5C;AAAuD,MAAA,OAAO,EAAEU,eAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,oBAAoB,MAA5B;AAA6B,MAAA,IAAI,EAAEpB,IAAnC;AAAyC,MAAA,OAAO,EAAEqB,WAAlD;AAAA,8BACE,QAAC,WAAD;AAAA,kBAActB,KAAK,CAACwB;AAApB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACA,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAMJ,cAAc,CAACV,kBAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAK,YAAA,KAAK,EAAC,mBAAX;AAA+B,YAAA,KAAK,EAAE;AAAEZ,cAAAA,OAAO,EAAEY;AAAX,aAAtC;AAAA,mCACI;AAAK,cAAA,KAAK,EAAC,WAAX;AAAuB,cAAA,KAAK,EAAC,4BAA7B;AAA0D,cAAA,OAAO,EAAC,WAAlE;AAAA,sCACI;AAAQ,gBAAA,KAAK,EAAC,mBAAd;AAAkC,gBAAA,EAAE,EAAC,IAArC;AAA0C,gBAAA,EAAE,EAAC,IAA7C;AAAkD,gBAAA,CAAC,EAAC,IAApD;AAAyD,gBAAA,IAAI,EAAC;AAA9D;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAM,gBAAA,KAAK,EAAC,kBAAZ;AAA+B,gBAAA,IAAI,EAAC,MAApC;AAA2C,gBAAA,CAAC,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAMQ,YAAY,CAAEV,gBAAF,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,MAAf;AAAsB,YAAA,EAAE,EAAE;AAAEV,cAAAA,OAAO,EAAEU,gBAAX;AAA6BiB,cAAAA,QAAQ,EAAE;AAAvC,aAA1B;AAAA,mCACI,QAAC,WAAD;AAAa,cAAA,EAAE,EAAE;AAAEC,gBAAAA,CAAC,EAAE,CAAL;AAAQC,gBAAAA,QAAQ,EAAE;AAAlB,eAAjB;AAAA,qCACA,QAAC,SAAD;AAAW,gBAAA,UAAU,EAAE;AAAEC,kBAAAA,SAAS,EAAE,SAAb;AAAwBC,kBAAAA,OAAO,EAAE;AAAjC,iBAAvB;AAAoE,gBAAA,EAAE,EAAC,gBAAvE;AAAwF,gBAAA,KAAK,EAAC,WAA9F;AAA0G,gBAAA,OAAO,EAAC,UAAlH;AAA6H,gBAAA,KAAK,EAAEvB,KAApI;AAA2I,gBAAA,QAAQ,EAAGO,KAAD,IAASD,cAAc,CAACC,KAAD;AAA5K;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAuBE,QAAC,aAAD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAES,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAK;AACpBA,YAAAA,WAAW;AACZ,WAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GA1FuBvB,c;;KAAAA,c","sourcesContent":["import React, { useEffect } from 'react';\r\n// import * as api from '../../../api/api'\r\n\r\nimport { saveAs } from 'file-saver';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport TextField from '@mui/material/TextField';\r\nimport { display } from '@mui/system';\r\n\r\nexport default function ProductDetails(props) {\r\n\r\nconst [open, setOpen] = React.useState(false);\r\n//   const [succesfulPurchase, setSuccessfulPurcahse] = React.useState();\r\nconst [sodas, setSoda] = React.useState([]);//sodaList\r\nconst [price, setPrice] = React.useState(0);//soda quantity\r\nconst [editPriceDisplay, setPriceDisplay] = React.useState('none')\r\nconst [editRestockDisplay, setRestockDisplay] = React.useState('none')\r\n\r\n//calling Server to set soda state\r\n// useEffect(async () => {\r\n//   const response = api.fetchSodas().then((res) => setInitialSodaStates(res.data));\r\n// }, [succesfulPurchase]);\r\n\r\n//calling server to update sodas\r\n// useEffect(async () => {\r\n//   const response = api.updateSoda(selectedSoda._id, selectedSoda.quantity)\r\n// },\r\n// [succesfulPurchase])//after a successful purchase is made\r\n  \r\n\r\n//update soda price\r\nconst handleQtyInput = (event) => {\r\n  setPrice(Number(event.target.value) || '');\r\n}\r\n\r\nconst handleRestock = () => {\r\n    //restock api\r\n}\r\n\r\nconst priceDisplay = (style) => {\r\n   (style == 'none') ? setPriceDisplay('flex') :  setPriceDisplay('none')    \r\n}\r\n\r\nconst restockDisplay = (style) => {\r\n    (style == 'none') ? setRestockDisplay('flex') :  setRestockDisplay('none')    \r\n }\r\n\r\n//opens control panel\r\nconst handleClickOpen = () => {\r\n  setOpen(true);\r\n};\r\n\r\n//closes control panel\r\nconst handleClose = (event, reason) => {\r\n  if (reason !== 'backdropClick') {\r\n    setOpen(false);\r\n    setPriceDisplay('none')\r\n    setRestockDisplay('none') \r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <div >\r\n      <Button className='product-details' variant=\"outlined\" onClick={handleClickOpen}>Details</Button>\r\n      <Dialog disableEscapeKeyDown open={open} onClose={handleClose}>\r\n        <DialogTitle>{props.sodaName}</DialogTitle>\r\n        <DialogContent>\r\n            <div className=\"restock-box\">\r\n            <Button onClick={() => restockDisplay(editRestockDisplay)}>Restock</Button>\r\n            <div class=\"checkmark-wrapper\" style={{ display: editRestockDisplay }}>\r\n                <svg class=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\">\r\n                    <circle class=\"checkmark__circle\" cx=\"26\" cy=\"26\" r=\"25\" fill=\"none\" />\r\n                    <path class=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\" />\r\n                </svg>\r\n            </div>\r\n            </div>\r\n            \r\n            <div className=\"price-box\">\r\n                <Button onClick={() => priceDisplay (editPriceDisplay)}>Edit Price</Button> \r\n                <Box component=\"form\" sx={{ display: editPriceDisplay, flexWrap: 'wrap' }}>\r\n                    <FormControl sx={{ m: 1, minWidth: 120 }}>\r\n                    <TextField inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }} id=\"outlined-basic\" label=\"New Price\" variant=\"outlined\" value={price} onChange={(event)=>handleQtyInput(event)}/>\r\n                    </FormControl>\r\n                </Box>\r\n            </div>\r\n            \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={() =>{\r\n            handleClose();\r\n          }}>\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}