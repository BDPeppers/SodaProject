{"ast":null,"code":"var _jsxFileName = \"C:\\\\webdev\\\\sodaProject\\\\soda-app\\\\src\\\\components\\\\pages\\\\Dashboard\\\\Piechart\\\\Piechart\\\\Piechart.jsx\";\nimport React from 'react';\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Piechart(props) {\n  console.log(props.data); // const RADIAN = Math.PI / 180;\n  // const percentLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n  //   const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  //   const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  //   const y = cy + radius * Math.sin(-midAngle * RADIAN);\n  //   return (\n  //     <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n  //       {`${(percent * 100).toFixed(0)}%`}\n  //     </text>\n  //   );\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(PieChart, {\n        width: 400,\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(Pie, {\n          data: props.data // label={percentLabel}\n          ,\n          cx: 420,\n          cy: 200,\n          startAngle: 180,\n          endAngle: 0,\n          innerRadius: 60,\n          outerRadius: 80,\n          fill: \"#8884d8\",\n          paddingAngle: 5,\n          dataKey: \"value\",\n          children: props.data.map(index => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: \"green\"\n          }, `cell-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_c = Piechart;\nexport default Piechart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Piechart\");","map":{"version":3,"sources":["C:/webdev/sodaProject/soda-app/src/components/pages/Dashboard/Piechart/Piechart/Piechart.jsx"],"names":["React","PieChart","Pie","Sector","Cell","ResponsiveContainer","Piechart","props","console","log","data","map","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,MAAxB,EAAgCC,IAAhC,EAAsCC,mBAAtC,QAAiE,UAAjE;;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,IAAlB,EADqB,CAGrB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,sBACA;AAAA,2BACI,QAAC,mBAAD;AAAqB,MAAA,KAAK,EAAC,MAA3B;AAAkC,MAAA,MAAM,EAAC,MAAzC;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAE,GAAjB;AAAsB,QAAA,MAAM,EAAE,GAA9B;AAAA,+BACI,QAAC,GAAD;AACI,UAAA,IAAI,EAAEH,KAAK,CAACG,IADhB,CAEI;AAFJ;AAGI,UAAA,EAAE,EAAE,GAHR;AAII,UAAA,EAAE,EAAE,GAJR;AAKI,UAAA,UAAU,EAAE,GALhB;AAMI,UAAA,QAAQ,EAAE,CANd;AAOI,UAAA,WAAW,EAAE,EAPjB;AAQI,UAAA,WAAW,EAAE,EARjB;AASI,UAAA,IAAI,EAAC,SATT;AAUI,UAAA,YAAY,EAAE,CAVlB;AAWI,UAAA,OAAO,EAAC,OAXZ;AAAA,oBAaKH,KAAK,CAACG,IAAN,CAAWC,GAAX,CAAgBC,KAAD,iBACZ,QAAC,IAAD;AAA4B,YAAA,IAAI,EAAC;AAAjC,aAAY,QAAOA,KAAM,EAAzB;AAAA;AAAA;AAAA;AAAA,kBADH;AAbL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADA;AAyBH;;KAxCQN,Q;AA0CT,eAAeA,QAAf","sourcesContent":["import React from 'react';\r\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer } from 'recharts';\r\n\r\nfunction Piechart(props) {\r\n    console.log(props.data)\r\n\r\n    // const RADIAN = Math.PI / 180;\r\n    // const percentLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\r\n    //   const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    //   const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    //   const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n    \r\n    //   return (\r\n    //     <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n    //       {`${(percent * 100).toFixed(0)}%`}\r\n    //     </text>\r\n    //   );\r\n    // };\r\n    return ( \r\n    <>\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <PieChart width={400} height={400}>\r\n                <Pie\r\n                    data={props.data}\r\n                    // label={percentLabel}\r\n                    cx={420}\r\n                    cy={200}\r\n                    startAngle={180}\r\n                    endAngle={0}\r\n                    innerRadius={60}\r\n                    outerRadius={80}\r\n                    fill=\"#8884d8\"\r\n                    paddingAngle={5}\r\n                    dataKey=\"value\"\r\n                >\r\n                    {props.data.map((index) => (\r\n                        <Cell key={`cell-${index}`} fill='green' />\r\n                    ))}\r\n                </Pie>\r\n            </PieChart>\r\n        </ResponsiveContainer>\r\n    </> \r\n    );\r\n}\r\n\r\nexport default Piechart;"]},"metadata":{},"sourceType":"module"}