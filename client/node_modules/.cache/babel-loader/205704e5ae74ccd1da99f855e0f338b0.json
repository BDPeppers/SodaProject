{"ast":null,"code":"var _jsxFileName = \"C:\\\\webdev\\\\sodaProject\\\\soda-app\\\\src\\\\components\\\\pages\\\\Products\\\\ProductDetails\\\\ProductDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react'; // import * as api from '../../../api/api'\n\nimport { saveAs } from 'file-saver';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductDetails() {\n  _s();\n\n  const [open, setOpen] = React.useState(false); //   const [succesfulPurchase, setSuccessfulPurcahse] = React.useState();\n\n  const [sodas, setSoda] = React.useState([]); //sodaList\n\n  const [selectedSoda, setSelectedSoda] = React.useState(); //cola is the default\n\n  const [qty, setQty] = React.useState(0); //soda quantity\n  //calling Server to set soda state\n  // useEffect(async () => {\n  //   const response = api.fetchSodas().then((res) => setInitialSodaStates(res.data));\n  // }, [succesfulPurchase]);\n  //calling server to update sodas\n  // useEffect(async () => {\n  //   const response = api.updateSoda(selectedSoda._id, selectedSoda.quantity)\n  // },\n  // [succesfulPurchase])//after a successful purchase is made\n  //update soda price\n\n  const handleQtyInput = event => {\n    setQty(Number(event.target.value) || '');\n  }; //opens control panel\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  }; //closes control panel\n\n\n  const handleClose = (event, reason) => {\n    if (reason !== 'backdropClick') {\n      setOpen(false);\n    }\n  };\n\n  console.log(sodas);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"controlPanel\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClickOpen,\n      children: \"Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      disableEscapeKeyDown: true,\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Soda Selection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          sx: {\n            display: 'flex',\n            flexWrap: 'wrap'\n          },\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            sx: {\n              m: 1,\n              minWidth: 120\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              inputProps: {\n                inputMode: 'numeric',\n                pattern: '[0-9]*'\n              },\n              id: \"outlined-basic\",\n              label: \"Price\",\n              variant: \"outlined\",\n              value: price,\n              onChange: event => handleQtyInput(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            handleClose();\n          },\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductDetails, \"+NdZExLjGLQT+My6YMwinrYpYWE=\");\n\n_c = ProductDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductDetails\");","map":{"version":3,"sources":["C:/webdev/sodaProject/soda-app/src/components/pages/Products/ProductDetails/ProductDetails.jsx"],"names":["React","useEffect","saveAs","Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","FormControl","Select","TextField","ProductDetails","open","setOpen","useState","sodas","setSoda","selectedSoda","setSelectedSoda","qty","setQty","handleQtyInput","event","Number","target","value","handleClickOpen","handleClose","reason","console","log","display","flexWrap","m","minWidth","inputMode","pattern","price"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\n// import * as api from '../../../api/api'\r\n\r\nimport { saveAs } from 'file-saver';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nexport default function ProductDetails() {\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n//   const [succesfulPurchase, setSuccessfulPurcahse] = React.useState();\r\n  const [sodas, setSoda] = React.useState([]);//sodaList\r\n  const [selectedSoda, setSelectedSoda] = React.useState();//cola is the default\r\n  const [qty, setQty] = React.useState(0);//soda quantity\r\n\r\n//calling Server to set soda state\r\n// useEffect(async () => {\r\n//   const response = api.fetchSodas().then((res) => setInitialSodaStates(res.data));\r\n// }, [succesfulPurchase]);\r\n\r\n//calling server to update sodas\r\n// useEffect(async () => {\r\n//   const response = api.updateSoda(selectedSoda._id, selectedSoda.quantity)\r\n// },\r\n// [succesfulPurchase])//after a successful purchase is made\r\n  \r\n\r\n//update soda price\r\nconst handleQtyInput = (event) => {\r\n  setQty(Number(event.target.value) || '');\r\n}\r\n//opens control panel\r\nconst handleClickOpen = () => {\r\n  setOpen(true);\r\n};\r\n//closes control panel\r\nconst handleClose = (event, reason) => {\r\n  if (reason !== 'backdropClick') {\r\n    setOpen(false);\r\n  }\r\n};\r\n\r\nconsole.log(sodas);\r\n  return (\r\n    <div className='controlPanel'>\r\n      <Button onClick={handleClickOpen}>Details</Button>\r\n      <Dialog disableEscapeKeyDown open={open} onClose={handleClose}>\r\n        <DialogTitle>Soda Selection</DialogTitle>\r\n        <DialogContent>\r\n          <Box component=\"form\" sx={{ display: 'flex', flexWrap: 'wrap' }}>\r\n            <FormControl sx={{ m: 1, minWidth: 120 }}>\r\n              <TextField inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }} id=\"outlined-basic\" label=\"Price\" variant=\"outlined\" value={price} onChange={(event)=>handleQtyInput(event)}/>\r\n            </FormControl>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={() =>{\r\n            handleClose();\r\n          }}>\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}