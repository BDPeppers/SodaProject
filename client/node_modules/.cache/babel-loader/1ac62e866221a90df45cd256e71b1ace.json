{"ast":null,"code":"var _jsxFileName = \"C:\\\\webdev\\\\sodaProject\\\\soda-app\\\\src\\\\components\\\\pages\\\\Dashboard\\\\Piechart\\\\Piechart\\\\SodaPiechart.jsx\";\nimport React from 'react';\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer } from 'recharts'; // function Piechart(props) {\n//     console.log(props.data)\n//     // const RADIAN = Math.PI / 180;\n//     // const percentLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n//     //   const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n//     //   const x = cx + radius * Math.cos(-midAngle * RADIAN);\n//     //   const y = cy + radius * Math.sin(-midAngle * RADIAN);\n//     //   return (\n//     //     <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n//     //       {`${(percent * 100).toFixed(0)}%`}\n//     //     </text>\n//     //   );\n//     // };\n//     // const data = [\n//     //     { name: 'Group A', value: 400 },\n//     //     { name: 'Group B', value: 300 },\n//     //     { name: 'Group C', value: 300 },\n//     //     { name: 'Group D', value: 200 },\n//     //   ];\n//     // const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n//     return ( \n//     <>\n//         <ResponsiveContainer width=\"100%\" height=\"100%\">\n//             <PieChart width={400} height={400} onMouseEnter={this.onPieEnter}>\n//                 <Pie\n//                     data={props.data}\n//                     // label={percentLabel}\n//                     cx={420}\n//                     cy={200}\n//                     startAngle={180}\n//                     endAngle={0}\n//                     innerRadius={60}\n//                     outerRadius={80}\n//                     fill=\"#8884d8\"\n//                     paddingAngle={5}\n//                     dataKey=\"value\"\n//                 >\n//                     {props.data.map((index) => (\n//                         <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n//                     ))}\n//                 </Pie>\n//             </PieChart>\n//         </ResponsiveContainer>\n//     </> \n//     );\n// }\n// export default Piechart;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  name: 'Group A',\n  value: 400\n}, {\n  name: 'Group B',\n  value: 300\n}, {\n  name: 'Group C',\n  value: 300\n}, {\n  name: 'Group D',\n  value: 200\n}];\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\nconsole.log('test');\nexport default class SodaPieChart extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    console.log(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(PieChart, {\n      width: 800,\n      height: 400,\n      onMouseEnter: this.onPieEnter,\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        data: this.props.data,\n        cx: 120,\n        cy: 200,\n        innerRadius: 60,\n        outerRadius: 80,\n        fill: \"#8884d8\",\n        paddingAngle: 5,\n        dataKey: \"purchased\",\n        children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n          fill: COLORS[index % COLORS.length]\n        }, `cell-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this);\n  }\n\n}\nSodaPieChart.demoUrl = 'https://codesandbox.io/s/pie-chart-with-padding-angle-7ux0o';","map":{"version":3,"sources":["C:/webdev/sodaProject/soda-app/src/components/pages/Dashboard/Piechart/Piechart/SodaPiechart.jsx"],"names":["React","PieChart","Pie","Sector","Cell","ResponsiveContainer","data","name","value","COLORS","console","log","SodaPieChart","PureComponent","constructor","props","render","onPieEnter","map","entry","index","length","demoUrl"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,MAAxB,EAAgCC,IAAhC,EAAsCC,mBAAtC,QAAiE,UAAjE,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAGA,MAAMC,IAAI,GAAG,CACT;AAAEC,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CADS,EAET;AAAED,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAFS,EAGT;AAAED,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAHS,EAIT;AAAED,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAJS,CAAb;AAME,MAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAf;AACAC,OAAO,CAACC,GAAR,CAAY,MAAZ;AACF,eAAe,MAAMC,YAAN,SAA2BZ,KAAK,CAACa,aAAjC,CAA+C;AAC5DC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAEAL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD;;AAKCC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE,GAAjB;AAAsB,MAAA,MAAM,EAAE,GAA9B;AAAmC,MAAA,YAAY,EAAE,KAAKC,UAAtD;AAAA,6BACE,QAAC,GAAD;AACE,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWT,IADnB;AAEE,QAAA,EAAE,EAAE,GAFN;AAGE,QAAA,EAAE,EAAE,GAHN;AAIE,QAAA,WAAW,EAAE,EAJf;AAKE,QAAA,WAAW,EAAE,EALf;AAME,QAAA,IAAI,EAAC,SANP;AAOE,QAAA,YAAY,EAAE,CAPhB;AAQE,QAAA,OAAO,EAAC,WARV;AAAA,kBAUGA,IAAI,CAACY,GAAL,CAAS,CAACC,KAAD,EAAQC,KAAR,kBACR,QAAC,IAAD;AAA4B,UAAA,IAAI,EAAEX,MAAM,CAACW,KAAK,GAAGX,MAAM,CAACY,MAAhB;AAAxC,WAAY,QAAOD,KAAM,EAAzB;AAAA;AAAA;AAAA;AAAA,gBADD;AAVH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AA7ByD;AAAzCR,Y,CAQVU,O,GAAU,6D","sourcesContent":["import React from 'react';\r\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer } from 'recharts';\r\n\r\n// function Piechart(props) {\r\n//     console.log(props.data)\r\n\r\n//     // const RADIAN = Math.PI / 180;\r\n//     // const percentLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\r\n//     //   const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n//     //   const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n//     //   const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n    \r\n//     //   return (\r\n//     //     <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n//     //       {`${(percent * 100).toFixed(0)}%`}\r\n//     //     </text>\r\n//     //   );\r\n//     // };\r\n//     // const data = [\r\n//     //     { name: 'Group A', value: 400 },\r\n//     //     { name: 'Group B', value: 300 },\r\n//     //     { name: 'Group C', value: 300 },\r\n//     //     { name: 'Group D', value: 200 },\r\n//     //   ];\r\n//     // const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n//     return ( \r\n//     <>\r\n//         <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n//             <PieChart width={400} height={400} onMouseEnter={this.onPieEnter}>\r\n//                 <Pie\r\n//                     data={props.data}\r\n//                     // label={percentLabel}\r\n//                     cx={420}\r\n//                     cy={200}\r\n//                     startAngle={180}\r\n//                     endAngle={0}\r\n//                     innerRadius={60}\r\n//                     outerRadius={80}\r\n//                     fill=\"#8884d8\"\r\n//                     paddingAngle={5}\r\n//                     dataKey=\"value\"\r\n//                 >\r\n//                     {props.data.map((index) => (\r\n//                         <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n//                     ))}\r\n//                 </Pie>\r\n//             </PieChart>\r\n//         </ResponsiveContainer>\r\n//     </> \r\n//     );\r\n// }\r\n\r\n// export default Piechart;\r\n\r\n\r\nconst data = [\r\n    { name: 'Group A', value: 400 },\r\n    { name: 'Group B', value: 300 },\r\n    { name: 'Group C', value: 300 },\r\n    { name: 'Group D', value: 200 },\r\n  ];\r\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n  console.log('test');\r\nexport default class SodaPieChart extends React.PureComponent {\r\n  constructor(props){\r\n    super(props);\r\n    \r\n    console.log(props);\r\n  }\r\n\r\n  \r\n    static demoUrl = 'https://codesandbox.io/s/pie-chart-with-padding-angle-7ux0o';\r\n  \r\n    render() {\r\n      return (\r\n        <PieChart width={800} height={400} onMouseEnter={this.onPieEnter}>\r\n          <Pie\r\n            data={this.props.data}\r\n            cx={120}\r\n            cy={200}\r\n            innerRadius={60}\r\n            outerRadius={80}\r\n            fill=\"#8884d8\"\r\n            paddingAngle={5}\r\n            dataKey=\"purchased\"\r\n          >\r\n            {data.map((entry, index) => (\r\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n            ))}\r\n          </Pie>\r\n        </PieChart>\r\n      );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}