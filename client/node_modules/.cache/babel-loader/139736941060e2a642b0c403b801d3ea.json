{"ast":null,"code":"var _jsxFileName = \"C:\\\\webdev\\\\sodaProject\\\\client\\\\src\\\\components\\\\pages\\\\Products\\\\ProductDetails\\\\ProductDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateSodaPrice, restockSoda, purchaseSuccess } from '../../../../redux/sodaOperations/sodaSlice';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormControl from '@mui/material/FormControl';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductDetails(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [open, setOpen] = React.useState(false);\n  const [editPriceDisplay, setPriceDisplay] = React.useState('none');\n  const [editRestockDisplay, setRestockDisplay] = React.useState('none');\n  const [newPrice, setNewPrice] = React.useState(0); //update soda price\n\n  const handleQtyInput = event => {\n    let newPrice = event.taget.value;\n\n    if (newPrice === '') {\n      alert(`Please don't give away sodas for free`);\n    } else {\n      dispatch(updateSodaPrice(props.sodaId, newPrice));\n    }\n  };\n\n  const handleRestock = () => {\n    //restock api\n    dispatch(restockSoda(props.sodaId, props.sodaMaxQty));\n  }; //show/hide edit price box\n\n\n  const priceDisplay = style => {\n    style === 'none' ? setPriceDisplay('flex') : setPriceDisplay('none');\n  }; //show/hide restock success\n\n\n  const restockDisplay = style => {\n    style === 'none' ? setRestockDisplay('flex') : setRestockDisplay('none');\n  }; //opens control panel\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  }; //closes control panel\n\n\n  const handleClose = (event, reason) => {\n    if (reason !== 'backdropClick') {\n      setOpen(false);\n      setPriceDisplay('none');\n      setRestockDisplay('none');\n      setNewPrice(0);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"product-details\",\n      variant: \"outlined\",\n      onClick: handleClickOpen,\n      children: \"Admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      disableEscapeKeyDown: true,\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: props.sodaName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"restock-box\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              restockDisplay(editRestockDisplay);\n              handleRestock();\n            },\n            children: \"Restock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"checkmark-wrapper\",\n            style: {\n              display: editRestockDisplay\n            },\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              class: \"checkmark\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              viewBox: \"0 0 52 52\",\n              children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                class: \"checkmark__circle\",\n                cx: \"26\",\n                cy: \"26\",\n                r: \"25\",\n                fill: \"none\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                class: \"checkmark__check\",\n                fill: \"none\",\n                d: \"M14.1 27.2l7.1 7.2 16.7-16.8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"price-box\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => priceDisplay(editPriceDisplay),\n            children: \"Edit Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            sx: {\n              display: editPriceDisplay,\n              flexWrap: 'wrap'\n            },\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              sx: {\n                m: 1,\n                minWidth: 120\n              },\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                inputProps: {\n                  inputMode: 'numeric',\n                  pattern: '[0-9]*'\n                },\n                id: \"outlined-basic\",\n                value: newPrice,\n                label: \"New Price\",\n                variant: \"outlined\",\n                onChange: event => setNewPrice(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            handleClose();\n          },\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductDetails, \"feehWLdVrHFWCXDZqlq5iMM2Z9w=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ProductDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductDetails\");","map":{"version":3,"sources":["C:/webdev/sodaProject/client/src/components/pages/Products/ProductDetails/ProductDetails.jsx"],"names":["React","useEffect","useDispatch","updateSodaPrice","restockSoda","purchaseSuccess","Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","FormControl","TextField","ProductDetails","props","dispatch","open","setOpen","useState","editPriceDisplay","setPriceDisplay","editRestockDisplay","setRestockDisplay","newPrice","setNewPrice","handleQtyInput","event","taget","value","alert","sodaId","handleRestock","sodaMaxQty","priceDisplay","style","restockDisplay","handleClickOpen","handleClose","reason","sodaName","display","flexWrap","m","minWidth","inputMode","pattern","target"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateSodaPrice, restockSoda, purchaseSuccess } from '../../../../redux/sodaOperations/sodaSlice';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport TextField from '@mui/material/TextField';\r\n\r\n\r\nexport default function ProductDetails(props) {\r\n\r\nconst dispatch = useDispatch()\r\n\r\nconst [open, setOpen] = React.useState(false);\r\nconst [editPriceDisplay, setPriceDisplay] = React.useState('none')\r\nconst [editRestockDisplay, setRestockDisplay] = React.useState('none')\r\nconst [newPrice, setNewPrice] = React.useState(0)\r\n\r\n//update soda price\r\nconst handleQtyInput = (event) => {\r\n  let newPrice = event.taget.value;\r\n  if(newPrice === ''){\r\n    alert(`Please don't give away sodas for free`)\r\n  }else{\r\n    dispatch(updateSodaPrice(props.sodaId, newPrice))\r\n  }\r\n}\r\n\r\nconst handleRestock = () => {\r\n    //restock api\r\n    dispatch(restockSoda(props.sodaId, props.sodaMaxQty))\r\n}\r\n\r\n//show/hide edit price box\r\nconst priceDisplay = (style) => {\r\n   (style === 'none') ? setPriceDisplay('flex') :  setPriceDisplay('none')    \r\n}\r\n\r\n//show/hide restock success\r\nconst restockDisplay = (style) => {\r\n    (style === 'none') ? setRestockDisplay('flex') :  setRestockDisplay('none')    \r\n}\r\n\r\n//opens control panel\r\nconst handleClickOpen = () => {\r\n  setOpen(true);\r\n};\r\n\r\n//closes control panel\r\nconst handleClose = (event, reason) => {\r\n  if (reason !== 'backdropClick') {\r\n    setOpen(false);\r\n    setPriceDisplay('none')\r\n    setRestockDisplay('none') \r\n    setNewPrice(0)\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <div >\r\n      <Button className='product-details' variant=\"outlined\" onClick={handleClickOpen}>Admin</Button>\r\n      <Dialog disableEscapeKeyDown open={open} onClose={handleClose}>\r\n        <DialogTitle>{props.sodaName}</DialogTitle>\r\n        <DialogContent>\r\n            <div className=\"restock-box\">\r\n            <Button onClick={() => { \r\n              restockDisplay(editRestockDisplay)\r\n              handleRestock()\r\n              }}>\r\n                Restock\r\n            </Button>\r\n            <div class=\"checkmark-wrapper\" style={{ display: editRestockDisplay }}>\r\n                <svg class=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\">\r\n                    <circle class=\"checkmark__circle\" cx=\"26\" cy=\"26\" r=\"25\" fill=\"none\" />\r\n                    <path class=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\" />\r\n                </svg>\r\n            </div>\r\n            </div>\r\n            \r\n            <div className=\"price-box\">\r\n                <Button onClick={() => priceDisplay (editPriceDisplay)}>Edit Price</Button> \r\n                <Box component=\"form\" sx={{ display: editPriceDisplay, flexWrap: 'wrap' }}>\r\n                    <FormControl sx={{ m: 1, minWidth: 120 }}>\r\n                    <TextField inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }} id=\"outlined-basic\" value={newPrice} label=\"New Price\" variant=\"outlined\" onChange={(event)=>setNewPrice(event.target.value)}/>\r\n                    </FormControl>\r\n                </Box>\r\n            </div>\r\n            \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={() =>{\r\n            handleClose();\r\n          }}>\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}