{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport React, { useEffect } from \"react\";\nimport * as api from '../api';\nconst DefaultAccountBalance = 5;\nconst sodaList = [];\nReact.useEffect(() => {\n  fetch(\"/http://localhost:3001/inventory\").then(res => res.json()).then(data => setData(data.express));\n}, []); //react-redux-thunk\n//used to handle api requests\n\nexport const fetchAllSodas = createAsyncThunk('Sodas/getSodas', async () => {\n  const response = await api.fetchSodas();\n  return response.data;\n});\nexport const VendingMachineSlice = createSlice({\n  name: 'Sodas',\n  initialState: {\n    accountBalance: DefaultAccountBalance,\n    sodas: sodaList\n  },\n  reducers: {\n    updateSoda: (state, action) => {\n      console.log(action);\n    },\n    getSodas: (state, action) => {\n      state = action.payload;\n      console.log(state.sodas.filter(soda => soda.name = action.payload.soda));\n      console.log(action);\n    }\n  }\n});\nexport const {\n  updateSoda,\n  getSodas\n} = VendingMachineSlice.actions;\nexport default VendingMachineSlice.reducer; //NOTES\n// each soda in sodalist should be accessible for manipulation for entire app\n// name, desc, price, quantity, maxQuantity, available","map":{"version":3,"sources":["C:/webdev/sodaProject/soda-app/src/redux/VendingMachine/VendingMachineSlice.js"],"names":["createAsyncThunk","createSlice","React","useEffect","api","DefaultAccountBalance","sodaList","fetch","then","res","json","data","setData","express","fetchAllSodas","response","fetchSodas","VendingMachineSlice","name","initialState","accountBalance","sodas","reducers","updateSoda","state","action","console","log","getSodas","payload","filter","soda","actions","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,KAAKC,GAAZ,MAAqB,QAArB;AAEA,MAAMC,qBAAqB,GAAG,CAA9B;AACA,MAAMC,QAAQ,GAAG,EAAjB;AAGAJ,KAAK,CAACC,SAAN,CAAgB,MAAM;AAClBI,EAAAA,KAAK,CAAC,kCAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAUC,OAAO,CAACD,IAAI,CAACE,OAAN,CAFzB;AAGD,CAJH,EAIK,EAJL,E,CAOA;AACA;;AACA,OAAO,MAAMC,aAAa,GAAGd,gBAAgB,CACzC,gBADyC,EAEzC,YAAW;AACP,QAAMe,QAAQ,GAAG,MAAMX,GAAG,CAACY,UAAJ,EAAvB;AACA,SAAOD,QAAQ,CAACJ,IAAhB;AACH,CALwC,CAAtC;AAQP,OAAO,MAAMM,mBAAmB,GAAGhB,WAAW,CAC1C;AACIiB,EAAAA,IAAI,EAAE,OADV;AAEIC,EAAAA,YAAY,EAAE;AACVC,IAAAA,cAAc,EAAEf,qBADN;AAEVgB,IAAAA,KAAK,EAAEf;AAFG,GAFlB;AAOAgB,EAAAA,QAAQ,EAAE;AACNC,IAAAA,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAE3BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH,KAJK;AAKNG,IAAAA,QAAQ,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACzBD,MAAAA,KAAK,GAAGC,MAAM,CAACI,OAAf;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACH,KAAN,CAAYS,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACb,IAAL,GAAYO,MAAM,CAACI,OAAP,CAAeE,IAAxD,CAAZ;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH;AATK;AAPV,CAD0C,CAAvC;AAqBP,OAAO,MAAM;AAAEF,EAAAA,UAAF;AAAcK,EAAAA;AAAd,IAA2BX,mBAAmB,CAACe,OAArD;AACP,eAAef,mBAAmB,CAACgB,OAAnC,C,CAGA;AACA;AACA","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\nimport React, {useEffect} from \"react\"\r\nimport * as api from '../api'\r\n\r\nconst DefaultAccountBalance = 5\r\nconst sodaList = []\r\n\r\n\r\nReact.useEffect(() => {\r\n    fetch(\"/http://localhost:3001/inventory\")\r\n      .then((res) => res.json())\r\n      .then((data) => setData(data.express));\r\n  }, []);\r\n\r\n\r\n//react-redux-thunk\r\n//used to handle api requests\r\nexport const fetchAllSodas = createAsyncThunk(\r\n    'Sodas/getSodas',\r\n    async() => {\r\n        const response = await api.fetchSodas()\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const VendingMachineSlice = createSlice(\r\n    {\r\n        name: 'Sodas',\r\n        initialState: {\r\n            accountBalance: DefaultAccountBalance,\r\n            sodas: sodaList\r\n        },\r\n    \r\n    reducers: {\r\n        updateSoda: (state, action) => {\r\n          \r\n            console.log(action)\r\n        },\r\n        getSodas: (state, action) => {\r\n            state = action.payload\r\n            console.log(state.sodas.filter((soda) => soda.name = action.payload.soda))\r\n            console.log(action)\r\n        }\r\n    }\r\n})\r\n\r\nexport const { updateSoda, getSodas } = VendingMachineSlice.actions\r\nexport default VendingMachineSlice.reducer\r\n\r\n\r\n//NOTES\r\n// each soda in sodalist should be accessible for manipulation for entire app\r\n// name, desc, price, quantity, maxQuantity, available"]},"metadata":{},"sourceType":"module"}