{"ast":null,"code":"var _jsxFileName = \"C:\\\\webdev\\\\sodaProject\\\\soda-app\\\\src\\\\components\\\\pages\\\\Products\\\\inventoryCardList\\\\InventoryCardList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport InventoryCard from \"../invertoryCard/InventoryCard\"; // import * as api from '../../../../api/api'\n//test object\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sodaTest = [{\n  \"_id\": {\n    \"$oid\": \"61c8cef81aca48e3ce06ace0\"\n  },\n  \"name\": \"Cola\",\n  \"desc\": \"A basic no nonsense cola that is the perfect pick me up for any occasion.\",\n  \"price\": \"1.0\",\n  \"quantity\": \"100\",\n  \"maxQuantity\": \"200\",\n  \"available\": true,\n  \"hexColorCode\": \"F6AF65\"\n}, {\n  \"_id\": {\n    \"$oid\": \"61c8cf571aca48e3ce06ace1\"\n  },\n  \"name\": \"MegaPop\",\n  \"desc\": \"Not for the faint of heart. So flavorful and so invigorating, it should probably be illegal.\",\n  \"price\": \"1.0\",\n  \"quantity\": \"25\",\n  \"maxQuantity\": \"50\",\n  \"available\": true,\n  \"hexColorCode\": \"823038\"\n}, {\n  \"_id\": {\n    \"$oid\": \"61c8cf6b1aca48e3ce06ace2\"\n  },\n  \"name\": \"Pop\",\n  \"desc\": \"An explosion of flavor that will knock your socks off!\",\n  \"price\": \"1.0\",\n  \"quantity\": \"100\",\n  \"maxQuantity\": \"200\",\n  \"available\": true,\n  \"hexColorCode\": \"00C2D1\"\n}, {\n  \"_id\": {\n    \"$oid\": \"61c8cf9f1aca48e3ce06ace3\"\n  },\n  \"name\": \"Fizz\",\n  \"desc\": \"An effervescent fruity experience with hints of grape and coriander.\",\n  \"price\": \"1.0\",\n  \"quantity\": \"100\",\n  \"maxQuantity\": \"200\",\n  \"available\": true,\n  \"hexColorCode\": \"F9E900\"\n}]; //soda information will be fetched from this compnent and passed down to children\n//will need to re-render component after data update\n\nexport default function InventoryCardList() {\n  _s();\n\n  const sodaData = useSelector(state => state.sodaSlice.sodas);\n  console.log(sodaData);\n  const sodas = sodaTest; //calling Server to set soda state\n  // useEffect(async () => {\n  //   const response = api.fetchSodas().then((res) => setSoda(res.data));\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-list\",\n    children: sodas.map(soda => /*#__PURE__*/_jsxDEV(InventoryCard, {\n      soda: soda\n    }, soda._id.$oid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InventoryCardList, \"X2uTdSsv8Q94ws97R9kzHvcdlk0=\", false, function () {\n  return [useSelector];\n});\n\n_c = InventoryCardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"InventoryCardList\");","map":{"version":3,"sources":["C:/webdev/sodaProject/soda-app/src/components/pages/Products/inventoryCardList/InventoryCardList.jsx"],"names":["React","useEffect","useSelector","InventoryCard","sodaTest","InventoryCardList","sodaData","state","sodaSlice","sodas","console","log","map","soda","_id","$oid"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,aAAP,MAA0B,gCAA1B,C,CACA;AAEA;;;AACA,MAAMC,QAAQ,GAAG,CACf;AAAC,SAAM;AAAC,YAAO;AAAR,GAAP;AAA2C,UAAO,MAAlD;AAAyD,UAAO,2EAAhE;AAA4I,WAAQ,KAApJ;AAA0J,cAAW,KAArK;AAA2K,iBAAc,KAAzL;AAA+L,eAAY,IAA3M;AAAgN,kBAAe;AAA/N,CADe,EAEf;AAAC,SAAM;AAAC,YAAO;AAAR,GAAP;AAA2C,UAAO,SAAlD;AAA4D,UAAO,8FAAnE;AAAkK,WAAQ,KAA1K;AAAgL,cAAW,IAA3L;AAAgM,iBAAc,IAA9M;AAAmN,eAAY,IAA/N;AAAoO,kBAAe;AAAnP,CAFe,EAGf;AAAC,SAAM;AAAC,YAAO;AAAR,GAAP;AAA2C,UAAO,KAAlD;AAAwD,UAAO,wDAA/D;AAAwH,WAAQ,KAAhI;AAAsI,cAAW,KAAjJ;AAAuJ,iBAAc,KAArK;AAA2K,eAAY,IAAvL;AAA4L,kBAAe;AAA3M,CAHe,EAIf;AAAC,SAAM;AAAC,YAAO;AAAR,GAAP;AAA2C,UAAO,MAAlD;AAAyD,UAAO,sEAAhE;AAAuI,WAAQ,KAA/I;AAAqJ,cAAW,KAAhK;AAAsK,iBAAc,KAApL;AAA0L,eAAY,IAAtM;AAA2M,kBAAe;AAA1N,CAJe,CAAjB,C,CAQA;AACA;;AACA,eAAe,SAASC,iBAAT,GAA6B;AAAA;;AAE5C,QAAMC,QAAQ,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,SAAN,CAAgBC,KAA1B,CAA5B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,QAAMG,KAAK,GAAGL,QAAd,CAJ4C,CAM5C;AACA;AACA;AACA;;AAEI,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACGK,KAAK,CAACG,GAAN,CAAUC,IAAI,iBACb,QAAC,aAAD;AAAmC,MAAA,IAAI,EAAEA;AAAzC,OAAoBA,IAAI,CAACC,GAAL,CAASC,IAA7B;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAlBuBV,iB;UAEPH,W;;;KAFOG,iB","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport InventoryCard from \"../invertoryCard/InventoryCard\";\r\n// import * as api from '../../../../api/api'\r\n\r\n//test object\r\nconst sodaTest = [\r\n  {\"_id\":{\"$oid\":\"61c8cef81aca48e3ce06ace0\"},\"name\":\"Cola\",\"desc\":\"A basic no nonsense cola that is the perfect pick me up for any occasion.\",\"price\":\"1.0\",\"quantity\":\"100\",\"maxQuantity\":\"200\",\"available\":true,\"hexColorCode\":\"F6AF65\"},\r\n  {\"_id\":{\"$oid\":\"61c8cf571aca48e3ce06ace1\"},\"name\":\"MegaPop\",\"desc\":\"Not for the faint of heart. So flavorful and so invigorating, it should probably be illegal.\",\"price\":\"1.0\",\"quantity\":\"25\",\"maxQuantity\":\"50\",\"available\":true,\"hexColorCode\":\"823038\"},\r\n  {\"_id\":{\"$oid\":\"61c8cf6b1aca48e3ce06ace2\"},\"name\":\"Pop\",\"desc\":\"An explosion of flavor that will knock your socks off!\",\"price\":\"1.0\",\"quantity\":\"100\",\"maxQuantity\":\"200\",\"available\":true,\"hexColorCode\":\"00C2D1\"},\r\n  {\"_id\":{\"$oid\":\"61c8cf9f1aca48e3ce06ace3\"},\"name\":\"Fizz\",\"desc\":\"An effervescent fruity experience with hints of grape and coriander.\",\"price\":\"1.0\",\"quantity\":\"100\",\"maxQuantity\":\"200\",\"available\":true,\"hexColorCode\":\"F9E900\"}\r\n]\r\n\r\n\r\n//soda information will be fetched from this compnent and passed down to children\r\n//will need to re-render component after data update\r\nexport default function InventoryCardList() {\r\n\r\nconst sodaData = useSelector(state => state.sodaSlice.sodas)\r\nconsole.log(sodaData)\r\nconst sodas = sodaTest\r\n\r\n//calling Server to set soda state\r\n// useEffect(async () => {\r\n//   const response = api.fetchSodas().then((res) => setSoda(res.data));\r\n// }, []);\r\n\r\n    return(\r\n        <div className='card-list'>\r\n          {sodas.map(soda => (\r\n            <InventoryCard key={soda._id.$oid} soda={soda} />\r\n          ))}\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}